name: Tests
on:
  push:
    branches: '**'
  pull_request:
    branches: main

jobs:
  unit-testing:
    runs-on: ${{ matrix.os }}
  
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    
      - name: Install xmllint on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install libxml2-utils
        shell: bash -el {0}
      
      - name: Set environment variables
        run:  echo "PYTHON_VERSION=$(curl --location https://devguide.python.org/versions | xmllint --html --xpath '//section[@id="supported-versions"]//table/tbody/tr[count(//section[@id="supported-versions"]//table/tbody/tr[td[.="security"]]/preceding-sibling::*)]/td[1]/p/text()' - 2> /dev/null)" >> $GITHUB_ENV
        shell : bash -el {0}

      # ${{ env.PYTHON_VERSION }}

      - name: Checkout Repository
        uses: actions/checkout@v4

      # update environment.yml by replacing python version with ${{ env.PYTHON_VERSION }}
      - name: Update environment.yml in macOS
        if: runner.os=='macOS'
        run: sed '' 's/python.*/python==${{ env.PYTHON_VERSION }}/' environment.yml > environment_new.yml
        shell: bash -el {0}

      - name: Update environment.yml in Linux or Windows
        if: runner.os!='macOS'
        run: sed 's/python.*/python>=${{ env.PYTHON_VERSION }}/' environment.yml > environment_new.yml
        shell: bash -el {0}

      - name: Display environment_new.yml
        run: cat environment_new.yml
        shell: bash -el {0}

      - name: set up conda and install dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment_new.yml
        
      - name : Remove environment_new.yml
        run: rm -rf environment_new.yml
        shell: bash -el {0}

      - name: install pytest and coverage
        run: |
          conda install conda-forge::pytest
          conda install conda-forge::coverage
        shell: bash -el {0}
      
      - name : Display Conda Environments
        run: conda env list
        shell: bash -el {0}
  
      - name: Display conda info
        run: conda info
        shell: bash -el {0}

      - name: Display conda list
        run: conda list
        shell: bash -el {0}
      
      # - name: Set Up Python
      #  uses: actions/setup-python@v5
      #  with:
      #    python-version: ${{ env.PYTHON_VERSION }}

      - name: Display Python Version
        run: python -c "import sys; print(sys.version)"
        shell: bash -el {0}
      
      # - name: Upgrade Pip
      #  run: python -m pip install --upgrade pip
      #  shell: bash
      
      # - name: Install requirements
      #  run: python -m pip install --upgrade -r requirements.txt
      #  shell: bash
      
      # - name: Install other dependencies
      #  run: python -m pip install --upgrade pytest coverage black flake8
      #  shell: bash
      
      - name: Show Full Numba Environment
        run: python -m numba -s
        shell: bash -el {0}
      
      - name: Run Unit Tests
        run: ./test.sh
        shell: bash -el {0}